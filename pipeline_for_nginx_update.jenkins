#!groovy
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
        }
    triggers { pollSCM('* * * * *') }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
        }
    stages {
        stage("Git clone") {
            steps {
                sh 'mkdir -p temp_git'
                sh 'git clone https://github.com/Kw1nT/nginx_conf_update temp_git'
               }
            }
        stage("Check ansible-playbook syntax") {
            steps {
                script{
                    playbook_name = sh (
                        script: 'ansible-playbook --syntax-check -i temp_git/hosts temp_git/common.yml | awk -F\'playbook: \' \'{print $2}\'',
                    returnStdout: true).trim()
                      }
                   }
        }
        stage("Check ansible connectivity") {
            steps {
                script{
                    connectivity_status = sh (
                        script: 'ansible -i temp_git/hosts all -m ping | grep -o -E "SUCCESS|UNREACHABLE"',
                    returnStdout: true).trim()
                      }
                   }
        }
        stage("Run ansible-playbook") {
            steps {
                script{
                    if (playbook_name.isEmpty() || "${connectivity_status}" ==~ /UNREACHABLE/) {
                    echo "Playbook not started because syntax check not successfully passed."
                }
                else {
                    sh "ansible-playbook -i temp_git/hosts ${playbook_name} --tags nginx"
                }
               }
            }
        }
    }
    post {
        always {
            sh 'rm -Rd temp_git'
               }
          }
}
